// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tatilse.Data;

#nullable disable

namespace Tatilse.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250722060906_edited2.1")]
    partial class edited21
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FeatureHotel", b =>
                {
                    b.Property<int>("Hotelshotel_id")
                        .HasColumnType("int");

                    b.Property<byte>("featuresfeature_id")
                        .HasColumnType("tinyint");

                    b.HasKey("Hotelshotel_id", "featuresfeature_id");

                    b.HasIndex("featuresfeature_id");

                    b.ToTable("FeatureHotel");
                });

            modelBuilder.Entity("Tatilse.Data.Client", b =>
                {
                    b.Property<int>("client_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("client_id"));

                    b.Property<string>("client_birthdate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("client_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("client_identity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("client_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("client_passw")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("client_phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("client_surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("client_username")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("client_id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Tatilse.Data.Feature", b =>
                {
                    b.Property<byte>("feature_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("feature_id"));

                    b.Property<string>("feature_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("feature_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("feature_id");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("Tatilse.Data.Hotel", b =>
                {
                    b.Property<int>("hotel_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("hotel_id"));

                    b.Property<string>("hotel_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotel_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotel_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("hotel_price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("hotel_id");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("Tatilse.Data.Reservation", b =>
                {
                    b.Property<int>("reservation_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("reservation_id"));

                    b.Property<int>("client_id")
                        .HasColumnType("int");

                    b.Property<DateOnly>("end_date")
                        .HasColumnType("date");

                    b.Property<int>("room_id")
                        .HasColumnType("int");

                    b.Property<DateOnly>("start_date")
                        .HasColumnType("date");

                    b.HasKey("reservation_id");

                    b.HasIndex("room_id");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Tatilse.Data.Room", b =>
                {
                    b.Property<int>("room_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("room_id"));

                    b.Property<int>("hotel_id")
                        .HasColumnType("int");

                    b.Property<short>("room_capacity")
                        .HasColumnType("smallint");

                    b.Property<string>("room_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("room_max_people")
                        .HasColumnType("smallint");

                    b.Property<string>("room_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("room_price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("room_quantity")
                        .HasColumnType("smallint");

                    b.HasKey("room_id");

                    b.HasIndex("hotel_id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("FeatureHotel", b =>
                {
                    b.HasOne("Tatilse.Data.Hotel", null)
                        .WithMany()
                        .HasForeignKey("Hotelshotel_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tatilse.Data.Feature", null)
                        .WithMany()
                        .HasForeignKey("featuresfeature_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tatilse.Data.Reservation", b =>
                {
                    b.HasOne("Tatilse.Data.Room", "room")
                        .WithMany("reservations")
                        .HasForeignKey("room_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("room");
                });

            modelBuilder.Entity("Tatilse.Data.Room", b =>
                {
                    b.HasOne("Tatilse.Data.Hotel", "hotel")
                        .WithMany("rooms")
                        .HasForeignKey("hotel_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hotel");
                });

            modelBuilder.Entity("Tatilse.Data.Hotel", b =>
                {
                    b.Navigation("rooms");
                });

            modelBuilder.Entity("Tatilse.Data.Room", b =>
                {
                    b.Navigation("reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
